# -*- coding: utf-8 -*-
"""Aula12_Desafio03.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vPpF5yXey-DX51lqoEg6-ZBd4YLxCx1t

#Aula 12 - Desafio 03
"""

# Commented out IPython magic to ensure Python compatibility.
# Imports
# %matplotlib inline
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# Ler e carregar o arquivo dataframe -> breast cancer
df = pd.read_csv('breast-cancer.data', sep = ",")
df.head()

print(df)

# Nomear colunas
df.columns = [
    'classe',
    'idade',
    'menopausa',
    'tamanho_tumor',
    'linfonodos_invadidos',
    'capsulas_linfonodos',
    'grau_malignidade',
    'mama',
    'quadrante_mama',
    'radioterapia'
]

df.head()

df.info()

df.shape

print(df.groupby('classe').size())

# Transformando em binário
df ['classe']  = df ['classe'].map({
    'no-recurrence-events':0,
    'recurrence-events': 1
})

# Conferindo o resultado
df.head()

faixas = df['idade'].str.extract(r'(\d+)-(\d+)')
faixas = faixas.astype(float)
df ['idade_media'] = (faixas[0] + faixas[1]) / 2
print(df['idade_media'].describe())

df.head()

faixas_tumor = df['tamanho_tumor'].str.extract(r'(\d+)-(\d+)')
faixas_tumor = faixas_tumor.astype(float)
df ['faixas_tumor_media'] = (faixas_tumor[0] + faixas_tumor[1]) / 2
print(df['faixas_tumor_media'].describe())

df.head()

faixas_linfonodos = df['linfonodos_invadidos'].str.extract('(\d+)-(\d+)')
faixas_linfonodos = faixas_linfonodos.astype(float)
df['faixas_linfonodos_media'] = (faixas_linfonodos[0] + faixas_linfonodos[1])/2
print(df['faixas_linfonodos_media'].describe())

df.head()

map_menopausa = {
    'lt40': 0, # Less than 40
    'ge40': 1, # Greater or equal to 40
    'premeno': 2, # Pré-menopausa
    '?': np.nan # Valor desconhecido
}
df['menopausa_num'] = df ['menopausa'].map(map_menopausa)

df.head()

df_sub = df[['classe','idade_media','menopausa_num','faixas_tumor_media','faixas_linfonodos_media']].copy()
df_sub.head()

# ========== BOXPLOTS ==========
fig, axes = plt.subplots(1, 3, figsize=(18, 5))

sns.boxplot(data=df_sub, x="classe", y="idade_media", ax=axes[0])
axes[0].set_title("Idade Média por Classe")
axes[0].set_xlabel("Classe (0 = sem recorrência, 1 = com recorrência)")
axes[0].set_ylabel("Idade Média")

sns.boxplot(data=df_sub, x="classe", y="menopausa_num", ax=axes[1])
axes[1].set_title("Menopausa Numérica por Classe")
axes[1].set_xlabel("Classe")
axes[1].set_ylabel("Menopausa Numérica")

sns.boxplot(data=df_sub, x="classe", y="faixas_tumor_media", ax=axes[2])
axes[2].set_title("Tamanho do Tumor por Classe")
axes[2].set_xlabel("Classe")
axes[2].set_ylabel("Tamanho Tumor Médio")

plt.tight_layout()
plt.show()

# ========== HISTOGRAMAS / KDE ==========
fig, axes = plt.subplots(1, 3, figsize=(18, 5))

sns.kdeplot(data=df_sub, x="idade_media", hue="classe", fill=True, ax=axes[0])
axes[0].set_title("Distribuição da Idade Média por Classe")

sns.kdeplot(data=df_sub, x="menopausa_num", hue="classe", fill=True, ax=axes[1])
axes[1].set_title("Distribuição da Menopausa Numérica por Classe")

sns.kdeplot(data=df_sub, x="faixas_tumor_media", hue="classe", fill=True, ax=axes[2])
axes[2].set_title("Distribuição do Tamanho do Tumor por Classe")

plt.tight_layout()
plt.show()

sns.pairplot(df_sub, hue='classe', height=3)
plt.show()

cols = ["classe", "idade_media", "menopausa_num", "faixas_tumor_media"]
corr_matx = df[cols].corr()
heatmap = sns.heatmap(corr_matx,cbar=True,annot=True,square=True,fmt='.2f',annot_kws={'size': 15},yticklabels=cols,xticklabels=cols,cmap='Dark2')
plt.show()