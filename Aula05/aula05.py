# -*- coding: utf-8 -*-
"""Aula05

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PdON7Z_hQHie00z9kr8DWVNc1ZGig2ry

#Aula 05: HSV

### Imports
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import cv2
import numpy as np
from matplotlib import pyplot as plt

"""###Imagem - Lena.png"""

img = cv2.imread("lena.png")
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)

# Lena.png
plt.imshow(img, cmap="gray")
plt.title("Lena.png")
plt.show()

"""### Filtro de convolução"""

# Define o Kernel
kernel = np.array([[1, 1, 1, 1],
                   [1, 1, 1, 1],
                   [1, 1, 1, 1],
                   [1, 1, 1, 1]])

kernel = kernel / (np.sum(kernel) if np.sum (kernel) else 1)

# Produto de convolução
img_conv = cv2.filter2D(img, -1, kernel)

# Lena.png
plt.imshow(img, cmap="gray")
plt.title("Lena.png")
plt.show()

# Exibe o resultado com filtro
plt.imshow(img_conv, cmap="Greys_r", vmin=0, vmax=255)
plt.title("Imagem com filtro")
plt.show()

"""### Filtros para Blurring"""

# Lena.png
plt.imshow(img, cmap="gray")
plt.title("Lena.png")
plt.show()

# Filtro da média
blur = cv2.blur(img,(5,5))
plt.imshow(blur, cmap="Greys_r", vmin=0, vmax=255)
plt.title("Blur - Filtro da média")
plt.show()

# Filtro gaussiano
blur = cv2.GaussianBlur(img,(5,5),0)
plt.imshow(blur, cmap="Greys_r", vmin=0, vmax=255)
plt.title("Blur - Filtro gaussiano")
plt.show()

# Filtro da mediana
blur = cv2.medianBlur(img,5)
plt.imshow(blur, cmap="Greys_r", vmin=0, vmax=255)
plt.title("Blur - Filtro da mediana")
plt.show()

# Filtro bilateral
blur = cv2.bilateralFilter(img,9,75,75)
plt.imshow(blur, cmap="Greys_r", vmin=0, vmax=255)
plt.title("Blur - Filtro bilateral")
plt.show()

"""### Construções de Kernels para blurring: Sobel X, Y e Laplaciano"""

# Lena.png
img = cv2.imread("lena.png")
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)
plt.imshow(img, cmap="gray")
plt.title("Lena.png")
plt.show()

# Filtro Sobel X
imgf = cv2.Sobel(img, cv2.CV_64F, 1,0,ksize=5)
plt.imshow(imgf, cmap="grey")
plt.title("Sobel X")
plt.show()

# Filtro Sobel Y
imgf = cv2.Sobel(img, cv2.CV_64F, 0,1,ksize=5)
plt.imshow(imgf, cmap="grey")
plt.title("Sobel Y")
plt.show()

# Filtro Laplaciano
imgf = cv2.Laplacian(img,cv2.CV_64F)
plt.imshow(imgf, cmap="grey")
plt.title("Laplaciano")
plt.show()

"""### Bordas de Canny"""

# Lena.png
plt.imshow(img, cmap="Greys_r", vmin = 0, vmax = 255)
plt.title("Lena.png")
plt.show()

min_contrast = 50
max_contrast = 200

imgfb = cv2.GaussianBlur(img, (5,5), 0)
imgf = cv2.Canny(imgfb, min_contrast, max_contrast)

plt.imshow(imgf, cmap="Greys_r", vmin=0, vmax=255)
plt.title("Bordas de Canny")
plt.show()